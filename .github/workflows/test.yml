name: Run unit tests

on: 
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Install Poetry
        run: |
          PIPX_BIN_DIR=/usr/local/bin pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry
          cache-dependency-path: poetry.lock

      - name: Set Poetry environment
        run: |
          poetry env use ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          poetry install

      - name: Run tests
        run: |
          poetry run pytest -v

      - name: Measure coverage
        if : ${{ github.event_name == 'push' && github.ref == github.event.repository.default_branch && matrix.python-version == '3.8' || github.event_name == 'workflow_dispatch' }}
        run: |
          poetry run pytest -v --cov --cov-report=lcov:coverage.info

      - name: Upload to Codecov
        if : ${{ github.event_name == 'push' && github.ref == github.event.repository.default_branch && matrix.python-version == '3.8' || github.event_name == 'workflow_dispatch' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: coverage.info
          verbose: true
