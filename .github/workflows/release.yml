name: Build wheels and publish

on: 
  push:
    paths:
      # only build wheels when the package code changes
      - 'woc/**'
      - 'setup.py'
    tags:
      - 'v*.*.*'
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  build-wheel:
    name: wheels
    runs-on: ubuntu-latest
    # trigger the workflow only on default branch, or manually
    if: |
        ${{ github.event_name == 'workflow_dispatch' 
          || ( github.event_name == 'push' && ( 
            github.ref_name == github.event.repository.default_branch 
            || startsWith(github.ref, 'refs/tags/v') 
          ) ) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.1
        env:
          CIBW_BUILD: cp3{8,9,10,11}-manylinux_x86_64
          # force manylinux2014 to avoid compatibility issues on RHEL 7
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          # install required dependenciesï¼š bz2
          CIBW_BEFORE_ALL: yum install -y bzip2-devel

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl

  build-sdist:
    name: sdist
    runs-on: ubuntu-latest
    # trigger the workflow only on default branch, or manually
    if: |
        ${{ github.event_name == 'workflow_dispatch' 
          || ( github.event_name == 'push' && ( 
            github.ref_name == github.event.repository.default_branch 
            || startsWith(github.ref, 'refs/tags/v') 
          ) ) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Build source distribution
        run: pipx run build --sdist

      - name: Upload source distribution
        uses: actions/upload-artifact@v2
        with:
          name: sdist
          path: dist/*.tar.gz


  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: [build-wheel, build-sdist]
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    if: startsWith(github.ref, 'refs/tags/v')  # can not publish without a tag

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Download wheels
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Download sdist
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
